name: Deploy ChopperTracker

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 038342322731

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      working-directory: ./FrontEnd
      run: npm ci

    - name: Build frontend
      working-directory: ./FrontEnd
      run: npm run build

    - name: Deploy frontend to S3
      run: |
        # Create S3 bucket if it doesn't exist
        aws s3api head-bucket --bucket choppertracker-web-ui 2>/dev/null || \
        aws s3api create-bucket --bucket choppertracker-web-ui --region ${{ env.AWS_REGION }}
        
        # Configure bucket policy for public access
        aws s3api put-bucket-policy --bucket choppertracker-web-ui --policy '{
          "Version": "2012-10-17",
          "Statement": [{
            "Sid": "PublicReadGetObject",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::choppertracker-web-ui/*"
          }]
        }'
        
        # Enable static website hosting
        aws s3 website s3://choppertracker-web-ui \
          --index-document index.html \
          --error-document error.html
        
        # Upload files
        aws s3 sync ./FrontEnd/dist s3://choppertracker-web-ui \
          --delete \
          --cache-control "public, max-age=3600"

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install backend dependencies
      working-directory: ./BackEnd
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy backend Lambda functions
      working-directory: ./BackEnd
      run: |
        # Package Lambda functions
        zip -r lambda-deployment.zip . -x "*.git*" -x "*__pycache__*" -x "*.pyc"
        
        # Create Lambda functions if they don't exist
        aws lambda create-function \
          --function-name choppertracker-start \
          --runtime python3.11 \
          --role arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/lambda-execution-role \
          --handler handler.start_handler \
          --zip-file fileb://lambda-deployment.zip \
          2>/dev/null || \
        aws lambda update-function-code \
          --function-name choppertracker-start \
          --zip-file fileb://lambda-deployment.zip
        
        aws lambda create-function \
          --function-name choppertracker-stop \
          --runtime python3.11 \
          --role arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/lambda-execution-role \
          --handler handler.stop_handler \
          --zip-file fileb://lambda-deployment.zip \
          2>/dev/null || \
        aws lambda update-function-code \
          --function-name choppertracker-stop \
          --zip-file fileb://lambda-deployment.zip

    - name: Update CloudFront distribution
      run: |
        # Get CloudFront distribution ID if exists
        DISTRIBUTION_ID=$(aws cloudfront list-distributions \
          --query "DistributionList.Items[?Comment=='ChopperTracker'].Id" \
          --output text)
        
        if [ ! -z "$DISTRIBUTION_ID" ]; then
          echo "Creating CloudFront invalidation for distribution $DISTRIBUTION_ID"
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"
        else
          echo "No CloudFront distribution found"
        fi

    - name: Output deployment URL
      run: |
        echo "Frontend deployed to: http://choppertracker-web-ui.s3-website-${{ env.AWS_REGION }}.amazonaws.com"
        echo "Note: CloudFront distribution will be created separately if needed"